version: '3.8'

services:
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://api.lingofilm.ru}
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - frontend-network
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "${API_PORT:-8000}:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - DEBUG=${DEBUG:-True}
    volumes:
      - ./backend:/app
    networks:
      - frontend-network
      - postgres_postgres-network
      - redis-docker_default

networks:
  frontend-network:
    driver: bridge
  # Используем существующие сети (external networks)
  postgres_postgres-network:
    external: true
  redis-docker_default:
    external: true